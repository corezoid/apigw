{{- $d := .Values.helm }}
{{- $tplVals := .Values }}
{{- $_ := set $tplVals "Template" .Template }}
{{- $cfg := .Values.global.apigw.apigw_app.config }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "apigw.apigw_app.deployment.name" . }}
  labels:
    {{- include "apigw.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "apigw.labels" . | nindent 6 }}
  strategy:
    type: {{ .Values.global.deploymentStrategy.type }}
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  replicas: {{ $d.min_replicas }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        {{- include "apigw.labels" . | nindent 8 }}
    spec:
      # equal to ProxyServer.ReadTimeoutSec+ProxyServer.MaxCallbackWaitSec+20
      terminationGracePeriodSeconds: 80
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
      {{- range $pullSecret := .Values.global.imagePullSecrets }}
        - name: {{ $pullSecret }}
      {{- end }}
      {{- end }}
      initContainers:
        - name: init-wait-resolve-redis
          image: {{ .Values.global.imageInit.repository }}:{{ .Values.global.imageInit.tag }}
          imagePullPolicy: IfNotPresent
          command: ["sh"]
          args:
            - "-c"
            - |
              until IP=$(nslookup ${APIGW_REDIS_HOST} 2>/dev/null | grep "Address: " | sed 's/.*: //g;s/ .*//g'); [ -n "$IP" ]; do
                echo "Waiting for Redis IP resolution";
                sleep 2;
              done
          env:
            {{- include "apigw.container_envs_redis" . | indent 12 }}

        - name: init-wait-redis-port
          image: {{ .Values.global.imageInit.repository }}:{{ .Values.global.imageInit.tag }}
          imagePullPolicy: IfNotPresent
          command: ["sh"]
          args:
            - "-c"
            - |
              until nc -zw1 ${APIGW_REDIS_HOST} ${APIGW_REDIS_PORT}; do
                echo "Waiting for Redis port";
                sleep 2;
              done
          env:
            {{- include "apigw.container_envs_redis" . | indent 12 }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File

        - name: init-wait-resolve-pgbouncer
          image: {{ .Values.global.imageInit.repository }}:{{ .Values.global.imageInit.tag }}
          imagePullPolicy: IfNotPresent
          command: ["sh"]
          args:
            - "-c"
            - |
              until IP=$(nslookup ${APIGW_POSTGRESQL_HOST} 2>/dev/null | grep "Address: " | sed 's/.*: //g;s/ .*//g'); [ -n "$IP" ]; do
                echo "Waiting for PgBouncer IP resolution";
                sleep 2;
              done
          env:
            {{- include "apigw.container_envs_db" . | indent 12 }}

        - name: init-wait-pgbouncer-port
          image: {{ .Values.global.imageInit.repository }}:{{ .Values.global.imageInit.tag }}
          imagePullPolicy: IfNotPresent
          command: ["sh"]
          args:
            - "-c"
            - |
              until nc -zw1 ${APIGW_POSTGRESQL_HOST} ${APIGW_POSTGRESQL_PORT}; do
                echo "Waiting for PgBouncer port";
                sleep 2;
              done
          env:
            {{- include "apigw.container_envs_db" . | indent 12 }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File

      serviceAccountName: {{ include "apigw.apigw_app.serviceaccount.name" . }}
      containers:
        - name: {{ .Chart.Name }}
          imagePullPolicy: {{ include "apigw_app.imagePullPolicy" . | quote }}
          image: {{ include "apigw_app.imageUrl" . | quote }}
          command: ["/apigw/apigw"]
          args: ["--config", "/apigw/apigw.json"]
          env:
            {{- include "apigw.container_envs_db" . | indent 12 }}
            {{- if .Values.global.db_settings }}
            {{- include "apigw.container_envs_db_settings" . | indent 12 }}
            {{- end }}
            {{- include "apigw.container_envs_redis" . | indent 12 }}
            {{- include "apigw.container_envs_host" . | indent 12 }}
            {{- if $cfg.gopsagent }}
            {{- if $cfg.gopsagent.enabled }}
            - name: GOPS_CONFIG_DIR
              value: /tmp/gops
            {{- end -}}
            {{- end -}}
            - name: INTERNAL_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          {{- include "apigw.apigw_app.resources" . | indent 10 }}
          ports:
            - name: {{ include "apigw.apigw_app.port.callback_server.Name" . }}
              containerPort: {{ include "apigw.apigw_app.port.callback_server.Number" . }}
              protocol: {{ include "apigw.apigw_app.port.callback_server.Protocol" . }}
            - name: {{ include "apigw.apigw_app.port.api_server.Name" . }}
              containerPort: {{ include "apigw.apigw_app.port.api_server.Number" . }}
              protocol: {{ include "apigw.apigw_app.port.api_server.Protocol" . }}
            - name: {{ include "apigw.apigw_app.port.proxy_server.Name" . }}
              containerPort: {{ include "apigw.apigw_app.port.proxy_server.Number" . }}
              protocol: {{ include "apigw.apigw_app.port.proxy_server.Protocol" . }}
            - name: {{ include "apigw.apigw_app.port.health_server.Name" . }}
              containerPort: {{ include "apigw.apigw_app.port.health_server.Number" . }}
              protocol: {{ include "apigw.apigw_app.port.health_server.Protocol" . }}
            - name: {{ include "apigw.apigw_app.port.sync_api_server.Name" . }}
              containerPort: {{ include "apigw.apigw_app.port.sync_api_server.Number" . }}
              protocol: {{ include "apigw.apigw_app.port.sync_api_server.Protocol" . }}
            {{- if .Values.global.serviceMonitor }}
            {{- if .Values.global.serviceMonitor.enabled }}
            - name: {{ include "apigw.apigw_app.port.metrics.Name" . }}
              containerPort: {{ include "apigw.apigw_app.port.metrics.Number" . }}
              protocol: {{ include "apigw.apigw_app.port.metrics.Protocol" . }}
            {{- end }}
            {{- end }}
            {{- if .Values.global.apigw.connect_enabled }}
            - name: {{ include "apigw.apigw_app.port.connect_server_tunnel.Name" . }}
              containerPort: {{ include "apigw.apigw_app.port.connect_server_tunnel.Number" . }}
              protocol: {{ include "apigw.apigw_app.port.connect_server_tunnel.Protocol" . }}
            - name: {{ include "apigw.apigw_app.port.connect_server_proxy.Name" . }}
              containerPort: {{ include "apigw.apigw_app.port.connect_server_proxy.Number" . }}
              protocol: {{ include "apigw.apigw_app.port.connect_server_proxy.Protocol" . }}
            {{- end }}
            {{- if .Values.global.apigw.apigw_app.config.task_api_server }}
            - name: {{ include "apigw.apigw_app.port.task_api_server.Name" . }}
              containerPort: {{ include "apigw.apigw_app.port.task_api_server.Number" . }}
              protocol: {{ include "apigw.apigw_app.port.task_api_server.Protocol" . }}
            {{- end }}
          volumeMounts:
            - name: config
              mountPath: /apigw/{{ .Values.config_file }}
              subPath: {{ .Values.config_file }}
            {{- if $cfg.gopsagent }}
            {{- if $cfg.gopsagent.enabled }}
            - name: gops
              mountPath: /tmp/gops
            {{- end }}
            {{- end }}
          securityContext:
            runAsUser: 1001
            runAsGroup: 1001
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            privileged: false
            capabilities:
              drop:
                - NET_ADMIN
                - SYS_ADMIN
                - MAC_ADMIN
                - SETUID
                - SETGID
                - FOWNER
                - CHOWN
                - MKNOD
          readinessProbe:
            httpGet:
              scheme: HTTP
              port: {{ $cfg.proxy_server.listen_port}}
              path: {{ $cfg.proxy_server.ready_path}}
            initialDelaySeconds: 2
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              scheme: HTTP
              port: {{ $cfg.proxy_server.listen_port}}
              path: {{ $cfg.proxy_server.ready_path}}
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
        {{- if $d.debug_container }}
        - name: 'debug'
          image: 'hub.corezoid.com/hub.docker.com/library/alpine:3.20.1'
          command: [ "/bin/sh" ]
          args: [ "-c", "while true; do sleep 5;done" ]
          resources:
            limits:
              memory: 200Mi
          volumeMounts:
            - name: gops
              mountPath: /tmp/gops
        {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "apigw.apigw_app.configmap.name" . }}
        - name: gops
          emptyDir: {}
      {{- with .Values.global.apigw.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.apigw.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
