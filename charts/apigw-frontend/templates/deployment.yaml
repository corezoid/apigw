{{- $global := .Values.global -}}
{{- $apigw_frontend := .Values.global.apigw.apigw_frontend }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}-deployment
  labels:
{{- include "apigw-frontend.labels" . | nindent 4 }}
spec:
  {{- if not $apigw_frontend.autoscaling.enabled }}
  replicas: {{ $apigw_frontend.autoscaling.minReplicas }}
  {{- end }}
  selector:
    matchLabels:
{{- include "apigw-frontend.labels" . | nindent 6 }}
  strategy:
    type: 'RollingUpdate'
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
{{- include "apigw-frontend.labels" . | nindent 8 }}
    spec:
      {{- if not (eq $global.repotype "public") }}
      imagePullSecrets:
        - name: {{ $global.imagePullSecrets.name }}
      {{- end }}
      containers:
        - name: {{ .Values.appName }}
          image: {{ include "apigw_frontend.imageUrl" . | quote }}
          imagePullPolicy: {{ include "apigw_frontend.imagePullPolicy" . | quote }}
          ports:
            - name: http
              containerPort: {{ include "apigw_frontend.appPort" . }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          resources:
            {{- toYaml $apigw_frontend.resources | nindent 12 }}
          volumeMounts:
            - name: config-nginx
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: config-site
              mountPath: /etc/nginx/conf.d/apigw_{{ .Values.appName }}.conf
              subPath: apigw_{{ .Values.appName }}.conf
      volumes:
        - name: config-nginx
          configMap:
            name: {{ .Values.appName }}-nginx-configmap
        - name: config-site
          configMap:
            name: {{ .Values.appName }}-site-configmap
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
